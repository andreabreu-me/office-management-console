#!/bin/sh
#
# office-account-manager
#
# chkconfig:   345 20 80
# description: A convenient web frontend to manage Office accounts
#

### BEGIN INIT INFO
# Provides: office-account-manager
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: A convenient web frontend to manage Office accounts
# Description: Create, update, delete and list/search Office accounts via a convenient web frontend.
### END INIT INFO

# Configure application
EXEC="/usr/bin/java"
PROG="office-account-manager"
APP_HOME="/usr/share/${PROG}/"
CONF_HOME="/etc/${PROG}/"
USER="${PROG}"
JARFILE="/usr/share/office-account-manager/lib/office-account-manager.jar"
LOCKFILE="/var/lock/subsys/${PROG}"
PIDFILE="/var/run/${PROG}.pid"
RUN_MODE="development"
JAVA_OPTS="-Xms128m -Xmx512m"

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network


[ -e /etc/sysconfig/${PROG} ] && . /etc/sysconfig/${PROG}

# Allow overwriting RUN_MODE from sysconfig
SPRING_OPTS="-DLOG_FILE=/var/log/office-account-manager/office-account-manager.log"
SPRING_OPTS="${SPRING_OPTS} --spring.profiles.active=${RUN_MODE}"
SPRING_OPTS="${SPRING_OPTS} --spring.config.name=office-account-manager"
SPRING_OPTS="${SPRING_OPTS} --spring.config.location=file:/etc/office-account-manager/"

start() {

    [ -x ${EXEC} ] || exit 5
    [ -f ${CONF_HOME} ] || exit 6
    # Check that networking is up.
    [ "${NETWORKING}" = "no" ] && exit 1
    echo -n $"Starting ${PROG}: "
    cd ${APP_HOME}
    daemon --check ${PROG} --pidfile ${PIDFILE} --user ${USER} ${EXEC} ${JAVA_OPTS} -jar ${JARFILE} ${SPRING_OPTS} &
    retval=$?
    echo
    [ ${retval} -eq 0 ] && touch ${LOCKFILE}
    return ${retval}
}

stop() {
    echo -n $"Stopping ${PROG}: "
    killproc -p ${PIDFILE} ${PROG}
    retval=$?
    [ ${retval} -eq 0 ] && rm -f ${LOCKFILE}
    return ${retval}
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    status -p ${PIDFILE} ${PROG}
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

exit $?
